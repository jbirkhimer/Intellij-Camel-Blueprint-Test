<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <!--<bean id="helloBean" class="edu.si.services.HelloBean">
        <property name="say" value="Hi from Camel"/>
    </bean>-->

    <!-- The VideoThumbnailAggregationStrategy -->
    <bean id="videoThumbnailAggregationStrategy" class="edu.si.services.beans.VideoThumbnailAggregationStrategy"/>

    <camelContext id="VideoDerivativeCamelTesting"
                  xmlns="http://camel.apache.org/schema/blueprint"
                  xmlns:atom="http://www.w3.org/2005/Atom"
                  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                  xmlns:fs="info:fedora/fedora-system:def/model#"
                  xmlns:fedora-types="http://www.fedora.info/definitions/1/0/types/"
                  xmlns:fits="http://hul.harvard.edu/ois/xml/ns/fits/fits_output"
                  xmlns:fsmgmt="http://www.fedora.info/definitions/1/0/management/"
                  trace="true"
                  streamCache="true">

        <route id="DerivativesStartProcessing">
            <!--
            <from uri="timer:foo?period=5000"/>
            <setBody>
                <method ref="helloBean" method="hello"/>
            </setBody>
            <log message="The message contains ${body}"/>
            <to uri="file:camel/output"/>
            -->
            <!--<from uri="file:camel/input"/>-->
            <!--<from uri="file:camel/input?noop=true"/>-->
            <!--<from uri="stream:file?fileName=camel/input/test.mp4&amp;autoCloseCount=1"/>-->

            <from uri="timer:fire?repeatCount=1"/>

            <setHeader headerName="CamelFedoraPid">
                <simple>
                    si:389320
                    <!--si:388897-->
                </simple>
            </setHeader>

            <!-- Get the DSID from the Atom message if any. -->
            <setHeader headerName="DSID">
                <simple>
                    OBJ
                </simple>
            </setHeader>

            <!--<setHeader headerName="fileEXT">
                <simple>video/${file:ext}</simple>
            </setHeader>

            <log message="${id} File ext: ${header.fileEXT}"/>-->

            <to uri="direct:processDerivativesVideo"/>
        </route>

        <route id="DerivativesProcessVideo">
            <from uri="direct:processDerivativesVideo"/>

            <log message="${id} Derivatives: Started Video processing ..."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

            <!-- Get the MIME type from the datastream profile. -->
            <!-- We should try the getDatastream more than once if it fails. -->
            <to uri="fedora://getDatastream?dsId=OBJ&amp;exchangePattern=InOut"/>
            <log message="${id} Derivatives: Datastream Metadata. BODY: ${body}"
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

            <setHeader headerName="dsMIME">
                <xpath resultType="java.lang.String">
                    /fsmgmt:datastreamProfile/fsmgmt:dsMIME/text()
                </xpath>
                <!--<simple>video/${file:ext}</simple>-->  <!-- testing -->
            </setHeader>

            <log message="${id} Derivatives: Datastream Metadata. MIME: ${header.dsMIME}"
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

            <!-- Get the Video from the FDO. -->
            <!-- We should try the getDatastreamDissemination more than once if it fails. -->
            <to uri="fedora://getDatastreamDissemination?dsId=OBJ&amp;exchangePattern=InOut"/>

            <log message="Got The Video from Fedora......."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

            <choice>

                <!-- If the OBJ datastream contains a supported video format : OGG, MP4, MOV, QT, M4V, AVI, MKV -->
                <when>

                    <simple>
                        ${header.dsMIME} == 'video/mp4'
                    </simple>

                    <!-- Just copy it and create thumbnail. -->
                    <multicast strategyRef="videoThumbnailAggregationStrategy">
                        <to uri="file:camel/output/mp4?fileName=${header.CamelFedoraPid}.mp4"/>   <!-- testing -->
                        <!--<to uri="fedora:addDatastream?name=MP4&amp;type=video/mp4&amp;dsLabel=MP4&amp;group=M&amp;versionable=false"/>-->
                        <to uri="direct:processDerivativesVideoThumbnailTimePosition"/>
                    </multicast>

                    <to uri="direct:processDerivativesVideoThumbnail"/>

                    <log message="${id} Derivatives: No processing required copying mp4 directly to MP4."
                         loggingLevel="INFO"
                         logName="edu.si.derivatives"/>
                </when>
                <!--<when>
                    <simple>
                        ${header.dsMIME} == 'video/ogg' ||
                        ${header.dsMIME} == 'video/mov' ||
                        ${header.dsMIME} == 'video/quicktime' ||
                        ${header.dsMIME} == 'video/m4v' ||
                        ${header.dsMIME} == 'video/avi' ||
                        ${header.dsMIME} == 'video/mkv'
                    </simple>
                    &lt;!&ndash; Make an MP4 derivative and TN. &ndash;&gt;
                    &lt;!&ndash; Create a video derivative and thumbnail using ffmpeg. &ndash;&gt;
                    <multicast stopOnException="true">
                        <to uri="direct:processDerivativesVideoFFMPEG"/>
                        <to uri="direct:processDerivativesVideoThumbnailTimePosition"/>
                        <to uri="direct:processDerivativesVideoThumbnail"/>
                    </multicast>
                </when>-->
                <otherwise>

                    <log message="${id} An unsupported audio file type was found: ${header.dsMIME}."
                         loggingLevel="WARN"/>
                </otherwise>
            </choice>

            <log message="${id} Finished Derivatives Video processing."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>
        </route>

        <route id="DerivativesProcessVideoFFMPEG">

            <from uri="direct:processDerivativesVideoFFMPEG"/>

            <log message="${id} Derivatives: Started Video FFMPEG processing ..."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

                    <!-- Make an MP4 derivative. -->
                    <!-- Create a video derivative using ffmpeg. -->

                    <recipientList>
                        <simple>
                            exec:ffmpeg?args= -i - -f mp4 -vcodec libx264 -preset medium -acodec libfdk_aac -ab 128k -ac
                            2 -async 1 -
                        </simple>
                    </recipientList>

                    <choice>
                        <!-- If ffmpeg processing succeeded? Store a MP4 datastream on the FDO. -->
                        <when>

                            <simple>
                                ${headers.CamelExecExitValue} == 0
                            </simple>

                            <multicast>
                                <!--<to uri="fedora:addDatastream?name=MP4&amp;type=video/mp4&amp;dsLabel=MP4&amp;group=M&amp;versionable=false"/>-->
                                <to uri="file:camel/output/?fileName=${file:ext}"/>   <!-- testing -->
                            </multicast>

                            <log message="${id} Derivatives: Adding converted video as mp4 to MP4."
                                 loggingLevel="INFO"
                                 logName="edu.si.derivatives"/>
                        </when>
                        <otherwise>
                            <log message="${id} Derivatives: FFMPEG processing failed. PID: ${headers.CamelFedoraPid}  Error Code: ${headers.CamelExecExitValue}"
                                 loggingLevel="ERROR"/>
                        </otherwise>
                    </choice>
            <log message="${id} Finished Derivatives Video FFMPEG processing."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>
        </route>

        <route id="DerivativesProcessVideoThumbnailTimePosition">
            <from uri="direct:processDerivativesVideoThumbnailTimePosition"/>
            <log message="${id} Derivatives: Started Video thumbnail time position processing ..."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

            <to uri="exec:ffprobe?args=-v error -select_streams v:0 -show_entries stream=duration -of compact=print_section=0:nokey=1 -&amp;useStderrOnEmptyStdout=true&amp;exchangePattern=InOut"/>

            <convertBodyTo type="java.lang.String" charset="utf-8"/>
            <transform>
                <simple>${body.replace("'\n'", " / 2\n")}</simple>
            </transform>
            <!--<log message="FFPROBE========= ${body}"/>-->

            <!-- If ffprobe processing succeeded? -->
            <!-- Then find the middle of the video using bc and Store video time position for thumbnail in header. -->
            <choice>
                <when>
                    <simple>
                        ${headers.CamelExecExitValue} == 0
                    </simple>

                    <to uri="exec:bc?args="/>
                    <convertBodyTo type="java.lang.String" charset="UTF-8"/>
                    <transform>
                        <simple>${body.replace("'\n'", "")}</simple>
                    </transform>
                    <!--<log message="BC=============== ${body}"/>-->

                    <!-- If ffprobe and bc processing succeeded? -->
                    <!-- Store video time position for thumbnail in header. -->
                    <choice>
                        <when>
                            <simple>
                                ${headers.CamelExecExitValue} == 0
                            </simple>

                            <!--<setHeader headerName="videoThumbnailTimePosition">
                                <simple>${body}</simple>
                            </setHeader>-->
                            <setProperty propertyName="videoThumbnailTimePosition">
                                <simple>${body}</simple>
                            </setProperty>
                            <log message="${id} Derivatives: Adding video time position for thumbnail ${property.videoThumbnailTimePosition} to header."
                                 loggingLevel="INFO"
                                 logName="edu.si.derivatives"/>
                        </when>
                        <otherwise>
                            <log message="${id} Derivatives: Video thumbnail time position bc processing failed. PID: ${headers.CamelFedoraPid}  Error Code: ${headers.CamelExecExitValue}"
                                 loggingLevel="ERROR"/>
                        </otherwise>
                    </choice>
                </when>
                <otherwise>
                    <log message="${id} Derivatives: Video thumbnail time position ffprobe processing failed. PID: ${headers.CamelFedoraPid}  Error Code: ${headers.CamelExecExitValue}"
                         loggingLevel="ERROR"/>
                </otherwise>
            </choice>
            <log message="${id} Finished Derivatives Video thumbnail time position processing."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>
        </route>

        <route id="DerivativesProcessVideoThumbnail">
            <from uri="direct:processDerivativesVideoThumbnail"/>
            <log message="${id} Derivatives: Started Video Thumbnail processing ..."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

            <log message="================================== VIDEO LENGTH ${property.videoThumbnailTimePosition} ============================================"
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>

            <!-- Make an TN datastream. -->
            <!-- Create a video thumbnail using ffmpeg. -->
            <recipientList>
                <!--<simple>
                    exec:ffmpeg?args=-itsoffset -2 -ss ${property.videoThumbnailTimePosition} -i - -vcodec mjpeg -vframes 1 -an -f rawvideo - &amp;useStderrOnEmptyStdout=true
                </simple>-->
                <simple>
                    exec:ffmpeg?args=-itsoffset -2 -ss ${property.videoThumbnailTimePosition} -i pipe:0 -vcodec mjpeg -vframes 1 -an -f rawvideo -&amp;useStderrOnEmptyStdout=true
                </simple>

                <!-- this command picks the best image for a thumbnail "ffmpeg ffmpeg -i - -vf thumbnail -frames:v 1 -" -->
            </recipientList>
            <choice>
                <!-- If ffmpeg thumbnail processing succeeded? Store a MP4 datastream on the FDO. -->
                <when>
                    <simple>
                        ${headers.CamelExecExitValue} == 0
                    </simple>
                    <multicast>
                        <!--<to uri="fedora:addDatastream?name=MP4&amp;type=video/mp4&amp;dsLabel=MP4&amp;group=M&amp;versionable=false"/>-->
                        <to uri="file:camel/output/?fileName=${file:onlyname.noext}.jpg"/>   <!-- testing -->
                    </multicast>
                    <log message="${id} Derivatives: Adding Video Thumbnail To TN."
                         loggingLevel="INFO"
                         logName="edu.si.derivatives"/>
                </when>
                <otherwise>
                    <log message="${id} Derivatives: Video Thumbnail Processing Using FFMPEG Failed. PID: ${headers.CamelFedoraPid}  Error Code: ${headers.CamelExecExitValue}"
                         loggingLevel="ERROR"/>
                </otherwise>
            </choice>
            <log message="${id} Finished Video Thumbnail processing."
                 loggingLevel="INFO"
                 logName="edu.si.derivatives"/>
        </route>
    </camelContext>

</blueprint>
